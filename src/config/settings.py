"""
Django settings for gringotts project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    "SECRET_KEY",
    'r2vgi6jqwy52kkd@@l_3b@zt%)9lgebh%_&66gas#i$n!&pm64'
)
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "").split()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "") in ["True", "true"]

DATABASE_USER = os.environ.get('DATABASE_USER', 'postgres')
DATABASE_NAME = os.environ.get('DATABASE_NAME', 'postgres')
DATABASE_HOST = os.environ.get('DATABASE_HOST', '')
DATABASE_PORT = os.environ.get('DATABASE_PORT', '5432')
DATABASE_PASSWORD = os.environ.get('DATABASE_PASSWORD', '')

SENTRY_PROTOCOL = os.environ.get('SENTRY_PROTOCOL', '')
SENTRY_USER = os.environ.get('SENTRY_USER', '')
SENTRY_PASSWORD = os.environ.get('SENTRY_PASSWORD', '')
SENTRY_URL = os.environ.get('SENTRY_URL', '')

SENTRY_USED = SENTRY_URL != ''
POSTGRES_USED = DATABASE_HOST != ''

INTERNAL_IPS = os.getenv("INTERNAL_IPS", "127.0.0.1").split()
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gringotts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

if POSTGRES_USED:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': DATABASE_NAME,
            'USER': DATABASE_USER,
            'PASSWORD': DATABASE_PASSWORD,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# ADD DEBUG OPTIONS
if DEBUG:
    INSTALLED_APPS += ['debug_toolbar']
    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
pwd_mod = "django.contrib.auth_password_validation"
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': '%s.UserAttributeSimilarityValidator' % pwd_mod,
    },
    {
        'NAME': ('%s.UserAttributeSimilarityValid.MinimumLengthValidator' %
                 pwd_mod),
    },
    {
        'NAME': ('%s.UserAttributeSimilarityValid.CommonPasswordValidator' %
                 pwd_mod),
    },
    {
        'NAME': ('%s.UserAttributeSimilarityValid.NumericPasswordValidator' %
                 pwd_mod),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = "/static"


# THIRD PARTY CONFIGURATION

# SENTRY CONFIGURATION
RAVEN_CONFIG = {
    'dsn': '%s://%s:%s@%s' % (
        SENTRY_PROTOCOL,
        SENTRY_USER,
        SENTRY_PASSWORD,
        SENTRY_URL
    ),
}

if SENTRY_USED:
    INSTALLED_APPS += ('raven.contrib.django.raven_compat',)
